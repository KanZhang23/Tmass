test ntuple_c_covar-1.1 {ntuple covariance calculation without filtering} {} {
    set id [hs::create_ntuple [next_uid] "Test ntuple" "tests" {a b c}]
    hs::ntuple_block_fill $id [list \
            1.0  1.0 1.0 \
            1.0  1.0 1.0 \
            2.0  1.0 1.0 \
            1.0  1.5 1.0 \
            0.0  1.0 1.0 \
            1.0  0.5 1.0 \
            1.0  1.0 0.75 \
            1.0  1.0 1.25 \
    ]
    # The following line is executed without C code compilation
    # because the extension can recognize that both filter and
    # weight are trivial.
    foreach {means covar} [hs::ntuple_c_covar $id 1 1 {b a c}] {}
    set expected_means {1.0 1.0 1.0}
    set expected_covar {{0.0625 0.0 0.0} {0.0 0.25 0.0} {0.0 0.0 0.015625}}
    if {$means == $expected_means && $covar == $expected_covar} {
        set ok 1
    } else {
        set ok 0
    }
    set ok
} {1}

test ntuple_c_covar-1.2 {ntuple covariance calculation with filtering} {} {
    set id [hs::create_ntuple [next_uid] "Test ntuple" "tests" {a b c}]
    hs::ntuple_block_fill $id [list \
            1.0  1.0 1.0 \
            1.0  1.0 1.0 \
            2.0  1.0 1.0 \
            1.0  1.5 1.0 \
            0.0  1.0 1.0 \
            1.0  0.5 1.0 \
            1.0  1.0 0.75 \
            1.0  1.0 1.25 \
            10.0  0.0 0.0 \
    ]
    foreach {means covar} [hs::ntuple_c_covar $id {a < 5.0f} 1 {b a c}] {}
    set expected_means {1.0 1.0 1.0}
    set expected_covar {{0.0625 0.0 0.0} {0.0 0.25 0.0} {0.0 0.0 0.015625}}
    if {$means == $expected_means && $covar == $expected_covar} {
        set ok 1
    } else {
        set ok 0
    }
    set ok
} {1}

test ntuple_c_covar-1.3 {ntuple covariance calculation with weighting} {} {
    set id [hs::create_ntuple [next_uid] "Test ntuple" "tests" {a b c d}]
    hs::ntuple_block_fill $id [list \
            1.0  1.0 1.0 1.0 \
            1.0  1.0 1.0 1.0 \
            2.0  1.0 1.0 1.0 \
            1.0  1.5 1.0 2.0 \
            0.0  1.0 1.0 1.0 \
            1.0  0.5 1.0 2.0 \
            1.0  1.0 0.75 4.0 \
            1.0  1.0 1.25 4.0 \
    ]
    foreach {means covar} [hs::ntuple_c_covar $id 1 d {b a c}] {}
    set expected_means {1.0 1.0 1.0}
    set expected_covar {{0.171875 0.0 0.0} {0.0 0.34375 0.0} {0.0 0.0 0.0859375}}
    if {$means == $expected_means && $covar == $expected_covar} {
        set ok 1
    } else {
        set ok 0
    }
    set ok
} {1}

catch {unset id}
catch {unset means covar}
catch {unset expected_means expected_covar}
catch {unset ok}
hs::delete_category "..."

::tcltest::cleanupTests
return
