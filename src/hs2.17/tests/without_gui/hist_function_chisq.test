test name-1.1 {function chi square test for 1d histogram} {[hs::have_cernlib]} {
    set id [hs::create_histogram [next_uid] "1d histo" "Tmp" "value" \
            "x" 0.5 8.5 8]
    hs::1d_hist_block_fill $id [list 0 1 4 5 9 4.5 7 8] \
            [list 0 1.3 0 0.5 2 3 1.5 0] [list 1.5 0 0.6 0 5 6 0 0]
    set result [hs::hist_function_chisq $id linear_1d {x} {a 1} {b 0}]
    assert_same_list $result [list 0.512691676617 4.25949375411 5] 1.e-6
} {}

test name-1.2 {function chi square test for 2d histogram} {[hs::have_cernlib]} {
    set id [hs::create_histogram [next_uid] "2d histo" "Tmp" "value" \
            "x" -0.5 1.5 2 "y" 0.5 4.5 4]
    hs::2d_hist_block_fill $id [list 0 1 4 5 9 4.5 7 8] \
            [list 0 1.3 0 0.5 2 3 1.5 0] [list 1.5 0 0.6 0 5 6 0 0]
    set result [hs::hist_function_chisq $id linear_2d {x y} {a 4} {b 1} {c 0}]
    assert_same_list $result [list 0.512691676617 4.25949375411 5] 1.e-6
} {}

test name-1.3 {function chi square test for 3d histogram} {[hs::have_cernlib]} {
    set id [hs::create_histogram [next_uid] "2d histo" "Tmp" "value" \
            "x" -0.5 1.5 2 "y" -0.5 1.5 2 "z" 0.5 2.5 2]
    hs::3d_hist_block_fill $id [list 0 1 4 5 9 4.5 7 8] \
            [list 0 1.3 0 0.5 2 3 1.5 0] [list 1.5 0 0.6 0 5 6 0 0]
    set result [hs::hist_function_chisq $id linear_3d {x y z} \
            {a 4} {b 2} {c 1} {d 0}]
    assert_same_list $result [list 0.512691676617 4.25949375411 5] 1.e-6
} {}

test name-1.4 {function chi square test for ntuple} {[hs::have_cernlib]} {
    set id [hs::create_ntuple [next_uid] "Test" "Text" {x y}]
    hs::fill_ntuple $id [list 0 0 1 1 2 4 3 9 4 16 5 25 6 36 7 49 8 64]
    catch {hs::hist_function_chisq $id linear_1d {x} {a 1} {b 0}} result
    string equal $result "Histo-Scope item with id $id is not a histogram"
} {1}

catch {unset id}
catch {unset result}
hs::delete_category "..."

::tcltest::cleanupTests
return
